// <auto-generated />
using System;
using EventoAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventoAPI.Migrations
{
    [DbContext(typeof(EventosDbContext))]
    [Migration("20250901152835_Migracion_Inicial")]
    partial class Migracion_Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventoAPI.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Eventos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Fecha = new DateTime(2025, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lugar = "Centro de Convenciones San Salvador",
                            Nombre = "Conferencia de Tecnología 2025"
                        },
                        new
                        {
                            Id = 2,
                            Fecha = new DateTime(2025, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lugar = "Hotel Real InterContinental",
                            Nombre = "Seminario de Desarrollo Empresarial"
                        },
                        new
                        {
                            Id = 3,
                            Fecha = new DateTime(2025, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lugar = "Universidad Don Bosco",
                            Nombre = "Workshop de Innovación Digital"
                        });
                });

            modelBuilder.Entity("EventoAPI.Models.Organizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.ToTable("Organizadores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cargo = "Coordinadora General",
                            EventoId = 1,
                            Nombre = "Ana María García"
                        },
                        new
                        {
                            Id = 2,
                            Cargo = "Director Técnico",
                            EventoId = 1,
                            Nombre = "Carlos Roberto Méndez"
                        },
                        new
                        {
                            Id = 3,
                            Cargo = "Coordinadora de Logística",
                            EventoId = 1,
                            Nombre = "María Elena Rodríguez"
                        },
                        new
                        {
                            Id = 4,
                            Cargo = "Director Ejecutivo",
                            EventoId = 2,
                            Nombre = "José Antonio López"
                        },
                        new
                        {
                            Id = 5,
                            Cargo = "Gerente de Eventos",
                            EventoId = 2,
                            Nombre = "Patricia Isabel Martínez"
                        },
                        new
                        {
                            Id = 6,
                            Cargo = "Coordinador Académico",
                            EventoId = 2,
                            Nombre = "Roberto Carlos Hernández"
                        },
                        new
                        {
                            Id = 7,
                            Cargo = "Directora de Innovación",
                            EventoId = 3,
                            Nombre = "Laura Beatriz Castillo"
                        },
                        new
                        {
                            Id = 8,
                            Cargo = "Coordinador de Talleres",
                            EventoId = 3,
                            Nombre = "Fernando José Ramírez"
                        },
                        new
                        {
                            Id = 9,
                            Cargo = "Especialista en Comunicaciones",
                            EventoId = 3,
                            Nombre = "Sofía Alexandra Morales"
                        });
                });

            modelBuilder.Entity("EventoAPI.Models.Participante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.ToTable("Participantes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "miguel.vasquez@email.com",
                            EventoId = 1,
                            Nombre = "Miguel Ángel Vásquez"
                        },
                        new
                        {
                            Id = 2,
                            Email = "carmen.flores@email.com",
                            EventoId = 1,
                            Nombre = "Carmen Lucía Flores"
                        },
                        new
                        {
                            Id = 3,
                            Email = "diego.santos@email.com",
                            EventoId = 1,
                            Nombre = "Diego Alejandro Santos"
                        },
                        new
                        {
                            Id = 4,
                            Email = "andrea.cruz@email.com",
                            EventoId = 1,
                            Nombre = "Andrea Valentina Cruz"
                        },
                        new
                        {
                            Id = 5,
                            Email = "sebastian.rivas@email.com",
                            EventoId = 1,
                            Nombre = "Sebastián Eduardo Rivas"
                        },
                        new
                        {
                            Id = 6,
                            Email = "gabriela.pena@email.com",
                            EventoId = 2,
                            Nombre = "Gabriela Monserrat Peña"
                        },
                        new
                        {
                            Id = 7,
                            Email = "alejandro.torres@email.com",
                            EventoId = 2,
                            Nombre = "Alejandro Rafael Torres"
                        },
                        new
                        {
                            Id = 8,
                            Email = "isabella.campos@email.com",
                            EventoId = 2,
                            Nombre = "Isabella María Campos"
                        },
                        new
                        {
                            Id = 9,
                            Email = "mauricio.jimenez@email.com",
                            EventoId = 2,
                            Nombre = "Mauricio Ernesto Jiménez"
                        },
                        new
                        {
                            Id = 10,
                            Email = "valeria.aguilar@email.com",
                            EventoId = 2,
                            Nombre = "Valeria Stephania Aguilar"
                        },
                        new
                        {
                            Id = 11,
                            Email = "daniel.ortega@email.com",
                            EventoId = 3,
                            Nombre = "Daniel Francisco Ortega"
                        },
                        new
                        {
                            Id = 12,
                            Email = "natalia.molina@email.com",
                            EventoId = 3,
                            Nombre = "Natalia Esperanza Molina"
                        },
                        new
                        {
                            Id = 13,
                            Email = "ricardo.velasco@email.com",
                            EventoId = 3,
                            Nombre = "Ricardo Mauricio Velasco"
                        },
                        new
                        {
                            Id = 14,
                            Email = "paola.guerrero@email.com",
                            EventoId = 3,
                            Nombre = "Paola Fernanda Guerrero"
                        },
                        new
                        {
                            Id = 15,
                            Email = "cristian.salazar@email.com",
                            EventoId = 3,
                            Nombre = "Cristian Armando Salazar"
                        });
                });

            modelBuilder.Entity("EventoAPI.Models.Organizador", b =>
                {
                    b.HasOne("EventoAPI.Models.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("EventoAPI.Models.Participante", b =>
                {
                    b.HasOne("EventoAPI.Models.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });
#pragma warning restore 612, 618
        }
    }
}
